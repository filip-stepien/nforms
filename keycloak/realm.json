{
    "id": "8be5135e-6254-4583-b74c-43976ee799aa",
    "realm": "forms",
    "displayName": "",
    "displayNameHtml": "",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [
            {
                "id": "c2e8a72d-4f61-41ee-b12b-608a36f5251c",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "8be5135e-6254-4583-b74c-43976ee799aa",
                "attributes": {}
            },
            {
                "id": "04c7c054-17d8-4888-bd3a-ab9060b22c9b",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "8be5135e-6254-4583-b74c-43976ee799aa",
                "attributes": {}
            },
            {
                "id": "ef1599d7-a437-4896-a992-252065869eca",
                "name": "default-roles-ankiety",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                    "realm": ["offline_access", "uma_authorization"],
                    "client": {
                        "account": ["view-profile", "manage-account"]
                    }
                },
                "clientRole": false,
                "containerId": "8be5135e-6254-4583-b74c-43976ee799aa",
                "attributes": {}
            }
        ],
        "client": {
            "realm-management": [
                {
                    "id": "02d6a22d-6640-426e-9597-9438892e6e9f",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "3f2cd131-6c93-4beb-acf6-0d20c0149f11",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "2a6b71bc-91d1-4916-8a68-ea377765fd56",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "192d1b2b-608f-4345-ac1b-71ae859e85c9",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": ["query-users", "query-groups"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "788a10b8-9d69-4585-ab66-7403c83cf852",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "7fd8981a-ecf8-4b30-b5d4-b6b11067eb33",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "5bd6eabc-260c-4917-9b24-06658a2d5c2f",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "151137fb-a1ef-4e45-9934-9b5dc9a69415",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "2cc54a70-f3d6-466a-abe5-5309f4b448d1",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "create-client",
                                "manage-events",
                                "view-users",
                                "manage-authorization",
                                "manage-users",
                                "query-users",
                                "view-realm",
                                "manage-clients",
                                "query-groups",
                                "manage-identity-providers",
                                "query-clients",
                                "view-events",
                                "view-clients",
                                "view-authorization",
                                "impersonation",
                                "manage-realm",
                                "view-identity-providers",
                                "query-realms"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "84e50c42-7fff-4250-93ec-da85d8407a3d",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "b9164c71-b634-46fe-af07-915ead64a183",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "05088623-a57c-4d78-a0b6-af41b0893071",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "067d4ead-7479-4a58-bdca-f737a14c3df0",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "c8ab61a9-15fb-4320-91e2-097b282ad681",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": ["query-clients"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "8795e390-1ce6-49b5-a356-06cc19adcfa3",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "15989cff-befb-4e21-8dd7-2cc9305ff770",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "de288b31-7ae6-43b6-a9e8-adb18d42a5a3",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "b6996815-d6f5-4eab-90a6-470aba6ff13e",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                },
                {
                    "id": "8f44ea71-e093-4852-867f-2cce69504722",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "39788415-5175-4adb-ac39-3c107bb781e8",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
                {
                    "id": "6e4cde73-2558-4875-bc20-eef98d38158b",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "724c7232-a419-4e15-8a18-602ae36b2a82",
                    "attributes": {}
                }
            ],
            "account": [
                {
                    "id": "84c4d920-8165-4966-8f08-7dfe866dff8c",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": ["view-consent"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
                    "attributes": {}
                },
                {
                    "id": "0832d0c2-1cc6-4b8b-8de5-cdef9844891c",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
                    "attributes": {}
                },
                {
                    "id": "c3c329ab-84e5-4314-b026-1129af7e0905",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
                    "attributes": {}
                },
                {
                    "id": "8300fada-8546-4d3d-876b-a371f1ff5635",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
                    "attributes": {}
                },
                {
                    "id": "f9a63761-70c5-4a2c-b644-b2b9d0cbb4f8",
                    "name": "view-groups",
                    "description": "${role_view-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
                    "attributes": {}
                },
                {
                    "id": "4b839bb6-2347-4383-801e-6e6a45726e23",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
                    "attributes": {}
                },
                {
                    "id": "dff164ea-aefd-432c-ad48-0763407b7f4e",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
                    "attributes": {}
                },
                {
                    "id": "d7bcc207-140a-438e-a3fa-aa8aa08d9e35",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": ["manage-account-links"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
                    "attributes": {}
                }
            ],
            "forms": []
        }
    },
    "groups": [],
    "defaultRole": {
        "id": "ef1599d7-a437-4896-a992-252065869eca",
        "name": "default-roles-ankiety",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "8be5135e-6254-4583-b74c-43976ee799aa"
    },
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
        {
            "id": "4ec9df4f-115a-4a47-a0ee-baa306536b6f",
            "username": "user",
            "firstName": "User",
            "lastName": "Userowski",
            "email": "user@example.com",
            "emailVerified": false,
            "enabled": true,
            "createdTimestamp": 1753437754836,
            "totp": false,
            "credentials": [
                {
                    "id": "f476cd01-c22b-4de7-b071-6c815448f09e",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1753437779492,
                    "secretData": "{\"value\":\"OOGcfpeRtrgmSxa+eBud+3cnlnoEwx+DRLy5TfIMjIE=\",\"salt\":\"zwlMpTTNwdPZQzGkYdKEaA==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": ["default-roles-ankiety"],
            "notBefore": 0,
            "groups": []
        }
    ],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": ["offline_access"]
        }
    ],
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": ["manage-account", "view-groups"]
            }
        ]
    },
    "clients": [
        {
            "id": "905b2c7e-7019-4b3e-9318-5feadcaedc65",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/forms/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/realms/forms/account/*"],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "organization",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "f93c0bdb-2ec1-4d22-a3aa-fdb76e8902f7",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/forms/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/realms/forms/account/*"],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "49670aeb-a268-4346-ad18-71ac1d807a9c",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "organization",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "b2a24760-18f1-4ae0-8d19-3f132126fa52",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "organization",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "724c7232-a419-4e15-8a18-602ae36b2a82",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "organization",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "f7717b3d-a1c9-4aae-9e2b-e39b3554ce60",
            "clientId": "forms",
            "name": "",
            "description": "",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": true,
            "clientAuthenticatorType": "client-secret",
            "secret": "sFaK6EWWmlCLuhjSFdLClqYZMW0WTAhP",
            "redirectUris": ["http://localhost:3000/*"],
            "webOrigins": ["*"],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1753440114",
                "backchannel.logout.session.required": "true",
                "standard.token.exchange.enabled": "false",
                "frontchannel.logout.session.required": "true",
                "display.on.consent.screen": "false",
                "oauth2.device.authorization.grant.enabled": "false",
                "use.jwks.url": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "organization",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "39788415-5175-4adb-ac39-3c107bb781e8",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "organization",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "1b381c03-5f37-4de0-8af9-d0f275343a24",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/forms/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/admin/forms/console/*"],
            "webOrigins": ["+"],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "ca5e3ce9-403d-479e-9c25-9d7ddcc12fe9",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "organization",
                "offline_access",
                "microprofile-jwt"
            ]
        }
    ],
    "clientScopes": [
        {
            "id": "342c3fdf-1127-41db-8643-bbe80bf9995c",
            "name": "basic",
            "description": "OpenID Connect scope for add all basic claims to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "996fb15f-f461-458c-a205-bf05ef5d5b04",
                    "name": "sub",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-sub-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                },
                {
                    "id": "efe2a930-b9e1-46a7-9237-e95509984284",
                    "name": "auth_time",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "AUTH_TIME",
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "auth_time",
                        "jsonType.label": "long"
                    }
                }
            ]
        },
        {
            "id": "849e5e14-75e8-404a-8bee-eacc03af5833",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "b9e3bfdd-104a-4551-9551-240f17b93227",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${emailScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "deda33aa-7608-4c98-9c31-99db2acc07eb",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "c1bb7ac5-3a1e-413e-a36f-a0fd05759a60",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "30e8b7e9-2fa5-4aae-bb38-5f72e7a5078c",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "d8061530-d32e-486a-b908-6b7d457dd815",
                    "name": "acr loa level",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-acr-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "3de3d5d1-399e-4c3f-b258-c9b7f54d95ae",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "81fe7807-5fb3-4468-af50-066bc7134667",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "af544833-696d-49a5-a51c-418cdf7af330",
            "name": "service_account",
            "description": "Specific scope for a client enabled for service accounts",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "6845baa1-f024-484e-9196-fd1ac49986df",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "client_id",
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "client_id",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "af47e286-e5d4-44ec-aa9f-f2677ee1ce24",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientAddress",
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "f1aca4b0-1baf-4d66-9d7b-f7bd4278fb38",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientHost",
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "26ae6947-0624-4e10-9ab0-9f952f8608b3",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "${rolesScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "8cd43528-d8f6-4fe7-99ed-ff72796d5909",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                },
                {
                    "id": "9a0235c1-3a94-48c9-8aab-9e82083b6993",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "2f8d3493-552f-485a-9953-b076a715b87c",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "7465ded7-3403-4131-8e3e-6fb1f1cf85f2",
            "name": "saml_organization",
            "description": "Organization Membership",
            "protocol": "saml",
            "attributes": {
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "5f1d1ecf-fa9c-4a08-9098-43cadd87914b",
                    "name": "organization",
                    "protocol": "saml",
                    "protocolMapper": "saml-organization-membership-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "1eb64997-0dca-4cec-9825-8647f3ff865d",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "a38adb62-51bb-46e8-8705-89641f604a28",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "multivalued": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "1db052e3-2974-4a7f-b70a-6ddcdad5909f",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "23b332f8-f6eb-4c08-9d13-f6510e2a448b",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${phoneScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "96effabe-7d0d-479b-9151-c621c9f3f8a4",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "1c4af1a0-47cf-40f6-bda9-cb966f1c3e73",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "d6efe01b-5540-4d5b-a22e-6996e5e0dc09",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "cd89f0f0-b013-4299-90b8-cecc272be30a",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "337bd279-aad6-402c-891b-a43c6c32da19",
            "name": "organization",
            "description": "Additional claims about the organization a subject belongs to",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${organizationScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "4f5b8cfb-7aa4-4a94-a191-633056294838",
                    "name": "organization",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-organization-membership-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "organization",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "0f792b3f-907e-4e95-995b-6e64581eefdd",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${addressScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "504a984a-c1d5-44b9-a8b6-35434a87a622",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "introspection.token.claim": "true",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "355afc26-44ce-4724-b9ff-c323da7fbcdc",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${profileScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "a09b4cc0-a9ce-49a3-821e-9154031f2676",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "6e05ebe8-8315-45ad-80b4-a98732392a93",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a8818e98-0be1-41ff-821f-f60bb47ce795",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "881ac716-bc10-4b65-ac36-4c50e4299876",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "93d25dd0-58d3-4940-8079-7a4f1ff141f5",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "long"
                    }
                },
                {
                    "id": "1b2c1ebe-082a-4fb8-8056-27d5581c8757",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "6859ec7c-6686-4191-aa57-ce192ee2ae75",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "d7cc7f4b-d447-4103-a198-788f89d08f47",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "69b7c539-6d87-42f5-b5c6-c8b1db338a27",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "9a12988a-6c92-4aab-9534-6b4102591bfc",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "55ff4371-2be9-4166-975c-2f86a6ae94b7",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "ac099b28-cd66-4e97-9ac4-7b84e1f7c979",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "1fa661d7-4d5e-4b55-929c-cc0ee2ca1a3f",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "0bccc74f-8113-43fd-9e29-a6d2ec7c67fd",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "role_list",
        "saml_organization",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr",
        "basic"
    ],
    "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt",
        "organization"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "f8176e87-2bb7-492e-898a-5aa31835912c",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": ["200"]
                }
            },
            {
                "id": "af179d4b-e40d-49df-9ce6-5b9ce045ba21",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": ["true"]
                }
            },
            {
                "id": "a5c1b32b-53b0-4b45-bab0-b3ec0d442071",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": ["true"],
                    "client-uris-must-match": ["true"]
                }
            },
            {
                "id": "b4c21c36-4f4a-4b1a-aa6f-8582b46d112f",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "2842bba5-c64a-48c2-a883-d6d8f0c64380",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "saml-user-property-mapper",
                        "oidc-full-name-mapper",
                        "saml-role-list-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-address-mapper",
                        "oidc-usermodel-attribute-mapper"
                    ]
                }
            },
            {
                "id": "d60a9569-e680-4679-938c-85850f29f9e3",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "ec22906f-6f82-4631-a6bb-c1127a255eb2",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": ["true"]
                }
            },
            {
                "id": "35a35a16-9db5-4ed5-ba3b-e3227b7d53e0",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-address-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-full-name-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-role-list-mapper",
                        "saml-user-property-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-attribute-mapper"
                    ]
                }
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "5b9949a2-3b9a-41cc-a03a-59d92ad78442",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEAwvwk3dFI4Q3FdXvr5gZAPtQfFsV6dtIEpg31eCXQPS05e9yPiYN4jFGuwZql7XM8OVOGOqpUxCXMfgWS/DwfU9BXITTIsHnOHMs9+FVn/Egzn9AH9ZfouZVNObQWnXhnZYz1ONEQM3JvahlB1JUR1SkCTlWwbIy2Oard5GDg0KfItrnGKh49/SqmyJuAx+lRA8btFwNe7NZmtRWecjsapBbnT+Bcjz8WgHhGB1H39T2L4YN7aahe0iBeNSi6cAazW2PWkq/5Vjp5sBBDvayJoMIE5APV4nvQGLgQ7HWwU2eJamcZsQWEQqTpdS9Rq1bBEDI8TyCAVHjgih2MJLUZDwIDAQABAoIBAE0BviGo1SqlALYskfcPwvHNXtXkekBRI6rdWnPwIzT2FnzXmAzMUqDAZc9qn1uPJlrRpPKocL/i2cdvtiROLmUwpCimKxifkoqGrlvUhzP45AKa63nQXAZnc891U3Uvp05RBExDLS3UZTI29Wvaz+cqwhFkAEButk1CMU5QAJoG6BnO9H4FKsnu6rFk4hP7BbF2KhRPkOr5QtpMz/urEpLSmUNfWhWr5Vis+n6psBA13DjKehQU9c1ufNZq1KJ3K8Mq0Tl7vEL++AOV3qkbzsLnmy+0XC1g+tuDAmCbNpzhXASkZXhKirPpCq71NYUZhtmbupBFjXqVk+qP3S6/1BECgYEA/AAGDypcncT9LNiW47Z9yIAO9wKP8TxiK/KvjDPOJuFmYtzwoMxb81vl6XmW6ZrM3wEEjFmUGxGsO6i1cwrHOqMJkxa889nnGl/VdLaDATkjQFIGqLabxJSjMpfJz/TpHvu720qZMESXqrawG86oSGJJ75t2iYSrxZlyOvIvzRcCgYEAxhRx9XBlAveBaYQYZmxpxBxh4yoLs+1rFRcV+9i9OO/ULCAqUjpJmrceUpZfkfWdkJLEonbIjYMwIk1kBufL9M4WJxNBzZYWrFil18+kLaahRPAnDf+kgDiMP/ccGoZ43jtuYqmPlBbcK/El5yOi/STEhf0Ptjlu0o8SASp6vskCgYAZ1ubIJ0/X3ZsYPh06vDupk3f1XA3mboqidwAJIEbDNdmJyZ3i3xGOop2wkwcmbPkU5MXSnlzRab5/X407fp9vI8iXjH1Tg8Rur+TzUsOcHH/A2KhWJGNUhOk3BtlquXIt+yIIGl4a1O24U4M7VrVqtqleKFK/RxtV56YO5UaBgQKBgDWbAtwxdqS+5r7viMrvPBBevf8EOfaPohMrFD/7//mQrhLjAZEPRSwhsosXNvYBSor9rUlqbAwgHL6rww47XO77dvNMOtqwa6JouzkUcJIKLkrB00/uh05L/2iwL2LeUYeS/eSljr29EgiyUlejRVDMyoKYYdAm6t8A6RZ3sJBBAoGBALJIrlSQ0+V81v+odCviDRxDoj20O9zOJcassELFAIv/gfYZKFISGPoszN+9VFmuxPTUTar06ow+tQq4FWCGwQ69SRACiE7+g0n0YwrAlbgyHjtelJGlgLzMqkWkn44LTKsVWIW4oRyMVDA/ET/lwp9pCXe5oLfefJ46EeM+eABo"
                    ],
                    "keyUse": ["SIG"],
                    "certificate": [
                        "MIICnTCCAYUCBgGYQQdbSjANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdhbmtpZXR5MB4XDTI1MDcyNTA5NTkxN1oXDTM1MDcyNTEwMDA1N1owEjEQMA4GA1UEAwwHYW5raWV0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAML8JN3RSOENxXV76+YGQD7UHxbFenbSBKYN9Xgl0D0tOXvcj4mDeIxRrsGape1zPDlThjqqVMQlzH4Fkvw8H1PQVyE0yLB5zhzLPfhVZ/xIM5/QB/WX6LmVTTm0Fp14Z2WM9TjREDNyb2oZQdSVEdUpAk5VsGyMtjmq3eRg4NCnyLa5xioePf0qpsibgMfpUQPG7RcDXuzWZrUVnnI7GqQW50/gXI8/FoB4RgdR9/U9i+GDe2moXtIgXjUounAGs1tj1pKv+VY6ebAQQ72siaDCBOQD1eJ70Bi4EOx1sFNniWpnGbEFhEKk6XUvUatWwRAyPE8ggFR44IodjCS1GQ8CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAT0ztixcF+yAULG6ZG7qAJh49qvxtgQ6wh4vRk/5AIeYVxurWoWP50ILTnzGZ5Rm/0AgGX86p8b/e8ZSjQzUPlkrzDAvr/hIq+D0KUIp1lMSIxQhxD/5s3NDWXIT01DjobsoZO6Y5xzuVlYZn+3Ry0bRQr1A29AZzAUWib6591Tm6SPF3X3aBMhrD/UleUaDB48E31D9etHgwcOa2CSDQFYVpDlw6Gx3scYQeClCiG22xsI5AZrySHjd6M9v5xwDOE142yd4WkF5MOS12S/Nczrl3Nb/pDFYi8oo3n7GCUxZx0GhSTd70y4vDakEAFLxwQY8WZ2vECDNrp7rHhXbMpQ=="
                    ],
                    "priority": ["100"]
                }
            },
            {
                "id": "129fbe1e-69c2-498a-901f-5ca67c1b7af7",
                "name": "hmac-generated-hs512",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "kid": ["12e76215-de97-465b-b1a2-6f2780a7c566"],
                    "secret": [
                        "9-pV5TNKd0hUwvfH_2tmIk8-5b3o3Lk6kaQBJfr5xEl-2Q8VDR0-CUBxtk8tkdqwGi9Fs3JGty9yAqbh4nvDrUJRcDJ_kCfKZ2ROpklkkjUzEcxqNoYLtDbuMpLtTNxCcsRn9LSqORHUKo4j40DQKCWEJiVg8wB6mKd-ChxVK7s"
                    ],
                    "priority": ["100"],
                    "algorithm": ["HS512"]
                }
            },
            {
                "id": "27fbab3d-b6ba-403e-815f-bf803c11644b",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "kid": ["9de30cd4-3656-44b0-9970-2883be824ea3"],
                    "secret": ["703XlnFk7vb6RDbY1VX0lQ"],
                    "priority": ["100"]
                }
            },
            {
                "id": "8447a254-7973-40d3-9af5-ec86ea973fcc",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEpAIBAAKCAQEAyWlmI6S2bQ+NHXdPHeXYOK5+kepJ51Ua/WBmFeVK+7hEpGY7zDIVdCcftm3y8Ehi+rHDOf9aS0bQAMe2J0Vx29xT831wKnS0PjHSiEF2FjHPBUNWZDMwuYZuInEemuqv9fXmE6QFW0RhJYO906rg9s8n9sdA4cQiPnByF3BfbQx+Agl8Wcg1JpYcFj2bDXTbmlaWsfCsy+DxIXYjmeWZc9bANzZDpqCbNFvxQ/8QHKSrl9CULx1J2hWTx+fxKHWzlUMBO73HI+70xlws8Cep+YWLrmx8gvlhm69jCTFSUjYIhBici/xVynfkbrd4mSNz9SNomp27PcZwIKHfE6AEhQIDAQABAoIBAAaxJ1Eg3GTUQvKLL8hFBkGf3pm3iJwUklB/3vR0SWECttklgnAe6+KPmDil/4/nP86nkF6Bcv0UTb3w5Mb6QjW1ZN6uuMbYWNLGMgIP9r33CrNYkOrEXqaTZl5jlso76PvJn0rgxMLLC1VFQs3hHBdnO6Mx7KBztVWQw+GufKUxWXfrTJv/f/ekEL75TEpmqvL8cU/cUT28RgPuwrj/OMLpIfDEs/bt8HsB2sp3afYv9ziRbxywq8VK2/T46fDgisexKlcwKPSXJZsFbWOD07VckKMxFCZbywlgFrnJhcRofdNofsXiwKJTTa0R5TMM5h/wJkDfBP+7cbfCFsHmO9MCgYEA6dVjPY1cx1o8SkbcnCfzw46apFax48tLaGIziKIGCYXUVVBmz3dLV9anHkDib57NKLRD9Xup0ctkOOg7fRz6LlBUu0MZPl30p+iNAL8WhUhH73DZE85IVxkF3k+nm89udVyNw0NOoYkCGygPWXJbwOrPRpy5ATHp8zPvS9xPLZsCgYEA3IE06IdlQsCmMSbIt3Olf4tsb+Gbpn2OGRgMgbhV3K9M6cRYvlp9t2j0CivxIs01Gse6CbrxJtLWH7L0eQHYFdkSAnJh24KovsSlcoDAWWYGacZHmPlbWQZSRchhf7u1vG6Sw18wfnXIyaTCitksyRpnJ+0qwKjCgwOlScwnyF8CgYAUrvhhSHDNfXDZzRzUf0AzqxiIstZ3ZNMdv5n5WwOXsgvPJBaEAXRbp7QOnASrhOt2z0M3oqGp2gjac8hXT8ndcOOd0NiZyKvMcmiOiViPn44lYuEAvH1vntoDCR61TIrjvLUZcYmyBjF2f3ukGNZ+4QZGo7RFo8mi5pQjLLCgQwKBgQC23XhRNqflefrZXD6s1P11Dt0407LPmeRULzuAAK1EPSTd4PVvt3/2sNVh8hsiL2hQ8z33f88p0UO+OhzAlaTsSX7EBLPe5TaoLlC+6sOZ4CCFa+hIltMIu1NTh+BDnBoVUOXpnHGNDoUbpMWpfH3FsV3HIMqJx+q32DglQWfkpQKBgQCMZLkK3weny5sMAKbVvftMB3tz+ZmdMI/fM1szdxZoT4Zwlwt4+j2koEIvq6V4KcrNqkW5zMW2iPG813xhavpGORSoMAOnqOsj53Xxpf5+NRMCffoC1ihojfgWCDBdcy4j1yAyb6qZiCeTV7wq5x030yHXf4gqzSLmDn3SiQ7MTg=="
                    ],
                    "keyUse": ["ENC"],
                    "certificate": [
                        "MIICnTCCAYUCBgGYQQdb+TANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdhbmtpZXR5MB4XDTI1MDcyNTA5NTkxOFoXDTM1MDcyNTEwMDA1OFowEjEQMA4GA1UEAwwHYW5raWV0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMlpZiOktm0PjR13Tx3l2DiufpHqSedVGv1gZhXlSvu4RKRmO8wyFXQnH7Zt8vBIYvqxwzn/WktG0ADHtidFcdvcU/N9cCp0tD4x0ohBdhYxzwVDVmQzMLmGbiJxHprqr/X15hOkBVtEYSWDvdOq4PbPJ/bHQOHEIj5wchdwX20MfgIJfFnINSaWHBY9mw1025pWlrHwrMvg8SF2I5nlmXPWwDc2Q6agmzRb8UP/EBykq5fQlC8dSdoVk8fn8Sh1s5VDATu9xyPu9MZcLPAnqfmFi65sfIL5YZuvYwkxUlI2CIQYnIv8Vcp35G63eJkjc/UjaJqduz3GcCCh3xOgBIUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAUJmdoyFw4XW8/gk5SuPyVJJntOUhhrJJzOtUc9LyMUMk0lu1x+3/NfuexdN1xQorUk5dYHKOMYF/HU+r5ap07Vm1R60Cp5+Fsu+10T+b22szRmB4waUWK3SMEPcaZqkREZdH7hUryQ8X92Dy/PE72OcAxjdAzDlrdNxbWELyq89DkuWbe3juFf6X0qHxzV23TrhD4QnwAetNOrCOd3INW0+ELQLsHyV/1FpNv6UIWKmSzpL5+JPJM2u0qFVIkUFiOvx8XnPkGuecYaHsIxafhDf1tAk1qRg65XTARlFcMz4MORGwEpifunX8yIlyOPp2c25HhPvPEEvzRTNEYse5iA=="
                    ],
                    "priority": ["100"],
                    "algorithm": ["RSA-OAEP"]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "authenticationFlows": [
        {
            "id": "c0968d96-f9f6-4c49-bbe5-f0879b65d583",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "a07d5874-77d2-4b3c-96c4-b2d6b3bc4062",
            "alias": "Browser - Conditional 2FA",
            "description": "Flow to determine if any 2FA is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "webauthn-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-recovery-authn-code-form",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "44ed91f7-2d2f-4f02-9218-ee3e86ae34f9",
            "alias": "Browser - Conditional Organization",
            "description": "Flow to determine if the organization identity-first login is to be used",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "organization",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "5f119c3a-1a91-48e0-a450-59783862c901",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "35ce437a-0e12-4353-8010-93ea0e7af2b7",
            "alias": "First Broker Login - Conditional Organization",
            "description": "Flow to determine if the authenticator that adds organization members is to be used",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "idp-add-organization-member",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "9c9cfa94-eb8d-4bbe-84a3-b0c0f7ec4d3f",
            "alias": "First broker login - Conditional 2FA",
            "description": "Flow to determine if any 2FA is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "webauthn-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-recovery-authn-code-form",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "beef0636-4843-48da-9f13-2fd4892d63f0",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "5729b0b1-b56f-41b1-8960-642755b0d52f",
            "alias": "Organization",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional Organization",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "165e1001-9252-4f6b-ac2c-ebe7f5729101",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "ea3feccd-5b4c-4cf3-b808-faed7c4ba339",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "932a4085-57c8-485a-bf2f-eeb762102069",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional 2FA",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "6375cfcf-2cc8-44d7-aac0-7e91bd6bd55b",
            "alias": "browser",
            "description": "Browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 26,
                    "autheticatorFlow": true,
                    "flowAlias": "Organization",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "e528cc68-882f-4a68-ac70-664f562a6955",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "900dbe75-c11d-479e-b258-9e643a29f3a7",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "a8fd335b-08c2-4b14-a7be-8b9414a8ec10",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "6d05838f-b8a6-43e8-a482-c4750de1c640",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 50,
                    "autheticatorFlow": true,
                    "flowAlias": "First Broker Login - Conditional Organization",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "18c73c4a-2112-4f0e-ad2f-6a023be72dc5",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional 2FA",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "15af8aaa-d103-417e-afa3-2501dd4959a2",
            "alias": "registration",
            "description": "Registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "7b7104c3-ef13-40b7-af91-d1d569e01294",
            "alias": "registration form",
            "description": "Registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-terms-and-conditions",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 70,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "46050bbb-1509-42f9-b1f0-3ad794fda2df",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c021d0e0-64a3-424a-b606-976c72bee816",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "c2072fea-7164-4801-8373-c58c1ed2cbb5",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "7bc93eab-e2cb-4169-a96e-ad58c573040d",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
        },
        {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config": {}
        },
        {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config": {}
        },
        {
            "alias": "VERIFY_PROFILE",
            "name": "Verify Profile",
            "providerId": "VERIFY_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 90,
            "config": {}
        },
        {
            "alias": "delete_credential",
            "name": "Delete Credential",
            "providerId": "delete_credential",
            "enabled": true,
            "defaultAction": false,
            "priority": 100,
            "config": {}
        },
        {
            "alias": "idp_link",
            "name": "Linking Identity Provider",
            "providerId": "idp_link",
            "enabled": true,
            "defaultAction": false,
            "priority": 110,
            "config": {}
        },
        {
            "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
            "name": "Recovery Authentication Codes",
            "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES",
            "enabled": true,
            "defaultAction": false,
            "priority": 120,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DevicePollingInterval": "5",
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "saml.signature.algorithm": "",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "frontendUrl": "",
        "acr.loa.map": "{}"
    },
    "keycloakVersion": "26.3.2",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}
