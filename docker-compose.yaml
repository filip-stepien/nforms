services:
  keycloak-db:
    image: postgres
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - keycloak-network

  keycloak:
    image: keycloak/keycloak
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KC_HOSTNAME: localhost
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - 8080:8080
    depends_on:
      - keycloak-db
    volumes:
      - ./docker/keycloak/:/opt/keycloak/data/import
    networks:
      - keycloak-network

  mongodb-rs0:
    build: ./docker/mongodb
    container_name: mongodb-rs0
    ports:
      - "27017:27017"
    healthcheck:
        test: "mongosh --username admin --password admin /scripts/healthcheck.js"
        interval: 5s
        timeout: 30s
        start_period: 0s
        start_interval: 1s
        retries: 30
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_KEYFILE_CONTENT: changeme
    volumes:
      - mongodb-data:/data/db
    networks:
      - mongodb-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongodb-rs0:27017/forms?replicaSet=rs0&authSource=admin
    depends_on:
      - mongodb-rs0
    ports:
      - 8081:8081
    networks:
      - mongodb-network

volumes:
  postgres-data:
  mongodb-data:

networks:
  keycloak-network:
  mongodb-network:
