services:
  keycloak-db:
    image: postgres
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - keycloak-network

  keycloak:
    image: keycloak/keycloak
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KC_HOSTNAME: localhost
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - 8080:8080
    depends_on:
      - keycloak-db
    volumes:
      - ./keycloak/:/opt/keycloak/data/import
    networks:
      - keycloak-network

  mongo:
    image: mongo
    container_name: mongo-rs0
    command: ["--keyFile", "/data/file.key", "--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate() }" | mongosh --username admin --password admin --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - ./file.key:/data/file.key
      - "mongo-data:/data/db"
      - "mongo-config:/data/configdb"

volumes:
  postgres-data:
  mongo-data:
  mongo-config:

networks:
  keycloak-network:
